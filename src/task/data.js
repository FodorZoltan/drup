"use strict";

/**
 * Class TaskData.
 *
 * Provides a place to store information generated by task actions. These
 * accumulate and persist between actions.
 */
class TaskData {

  /**
   * TaskData constructor.
   *
   * @param {object} data
   *    The initial data.
   */
  constructor(data = {}) {
    if (typeof data !== "object") {
      throw new Error("Task initial data must be of type object.");
    }

    this.data = data;
  }

  /**
   * Gets a stored value.
   *
   * @param {string} selector
   *    The key of the value. It can be nested by ".".
   * @returns {*}
   *    The value of the data or null if not found.
   */
  get(selector) {
    let path = selector.split(".");
    let variable = this.data;

    for (let i = 0; i < path.length; i++) {
      if (!variable.hasOwnProperty(path[i])) {
        return null;
      }

      variable = variable[path[i]];
    }

    return variable;
  }

  /**
   * Sets a value in storage.
   *
   * @param {string} selector
   *    The key of the value. It can be nested by ".".
   * @param {*} value
   *    The value to set for the key.
   */
  set(selector, value) {
    let path = selector.split(".");
    let _data = this.data;

    for (let i = 0, l = path.length; i < l; i++) {
      let p = path[i];

      if (!_data.hasOwnProperty(p)) {
        if (i === l - 1) {
          _data[p] = value;
          break;
        } else {
          _data[p] = {};
        }
      } else if (i === l - 1) {
        _data[p] = value;
        break;
      }

      _data = _data[p];
    }
  }

}

module.exports = TaskData;
